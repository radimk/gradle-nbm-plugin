buildscript {
    repositories {
        mavenCentral()
        // uncomment following to use development copy created by running
        // ./gradlew :nbmPlugin:publish 
        // from the project root directory
        // maven {
        //     url uri('../../plugin/build/repo')
        // }

        // For the tooling api
        maven { url = uri("https://repo.gradle.org/gradle/libs-releases") }
    }
    dependencies {
        classpath "cz.kubacki.gradle.plugins:gradle-nbm-plugin:1.17.0"
        gradleApi()
    }
}
apply plugin: 'java'
apply plugin: 'cz.kubacki.nbm'

ext {
    netbeansVersion = "RELEASE124"
}

repositories {
    mavenCentral()
}

version = '1.2.3'
nbm {
    moduleName = 'com.foo.acme'
    // Module signing data
    keyStore {
         keyStoreFile = project.file('keystore')
         username = 'myself'
         password = 'specialsauce'
    }
}

dependencies {
    implementation "org.netbeans.api:org-openide-awt:$netbeansVersion"
    annotationProcessor "org.netbeans.api:org-openide-awt:$netbeansVersion"
    implementation "org.netbeans.api:org-openide-util:$netbeansVersion"
    implementation "org.netbeans.api:org-netbeans-api-annotations-common:$netbeansVersion"

    // Use 'implementation' configured if implementation dependency is needed for some module
    // implementation "org.netbeans.api:org-netbeans-api-annotations-common:$netbeansVersion"

    // example of dependency that will be copied to modules/ext and added to ClassPath: attribute in MANIFEST.MF
    implementation 'org.slf4j:slf4j-api:1.7.2'
}

// set netBeansInstallDir project property

task netBeansRun(type: Exec) {
    doFirst {
        def confFile = project.file("$project.buildDir/testuserdir/etc/netbeans.conf")
        confFile.parentFile.mkdirs()
        confFile.write "netbeans_extraclusters=\"$project.buildDir/module\""
    }

    workingDir "${project.buildDir}"

    def executable = System.getProperty('os.name').toLowerCase().contains('windows') ? 'netbeans.exe' : 'netbeans'
    if (project.hasProperty('netBeansInstallDir')) {
        executable = netBeansInstallDir + '/bin/' + executable
    } else {
        logger.warn('netBeansInstallDir property is not specified. Assuming \'netbeans\' executable is on PATH.')
    }
    commandLine executable, '--userdir', "$project.buildDir/testuserdir"
}
